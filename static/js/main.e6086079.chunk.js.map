{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","a","url","fetch","response","json","FindMovie","addMovie","useState","query","handleChange","setMovie","isLoaded","setStatusLoading","findMovie","loadedMovie","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","classnames","input","onChange","event","target","value","onClick","App","data","setMovies","newMovie","find","cloneMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6086079.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const API_KEY = '605e0ff4';\nconst BASE_URL = 'http://www.omdbapi.com/?apikey=';\n\nexport const getMovie = async(title) => {\n  const url = `${BASE_URL}${API_KEY}&t=${title}`;\n\n  const response = await fetch(url);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [query, handleChange] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [isLoaded, setStatusLoading] = useState(true);\n\n  const findMovie = async() => {\n    try {\n      const loadedMovie = await getMovie(query);\n\n      if (loadedMovie.Response === 'False') {\n        setStatusLoading(false);\n\n        return;\n      }\n\n      setMovie({\n        title: loadedMovie.Title,\n        description: loadedMovie.Plot,\n        imgUrl: loadedMovie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${loadedMovie.imdbID}`,\n        imdbId: loadedMovie.imdbID,\n      });\n    } catch (error) {\n      setStatusLoading(!isLoaded);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classnames({\n                input: true,\n                'is-danger': !isLoaded,\n              })}\n              onChange={(event) => {\n                handleChange(event.target.value);\n                setStatusLoading(true);\n              }}\n              value={query}\n            />\n          </div>\n\n          {!isLoaded\n          && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (movie) {\n                  addMovie(movie);\n                  setMovie(null);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie\n        && (\n          <MovieCard {...movie} />\n        ) }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie) => {\n    const hasSameMovie = movies.find(movie => newMovie.imdbId === movie.imdbId);\n\n    if (!hasSameMovie) {\n      const cloneMovies = movies.map(movie => ({ ...movie }));\n\n      setMovies([\n        ...cloneMovies,\n        newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}